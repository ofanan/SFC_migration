## Service Function Chains Migration

This project provides simulator tools to test scenarios and algorithms for the migration of Service Function Chains (SFC). 

# Contents

The algorithms that decide on migration based on input files that are generated by a mobility simulator.
Currently, two simulators are implemented:
1. An event-driven simulator, implemented in the file mobilitiy_simulator.py. 
This is a simple simulator, written from scratch. It simulates users moving within a rectangle, that is covered by several (currently, exactly 4) Access Points (APs).
Each user moves randomly, either horizontally or vertically, where the destination point is picked u.a.r. in a way that verifies that it is always within the coverage of a different AP from the current user's AP.
Each user arriving to its destination immediately starts moving to another destination, at the same way described above.
Whenever a user crosses to the area covered by another AP, the simulator prints to a file the time, and the AP currently covering 
each user.

2. A modification of the [CityMob](http://www.grc.upv.es/Software/oldsw/citymob.html) simulator, version 2. These are the Java files under SFC_migration/src. CityMob runs as usual, using its defined parameters, but instead of generating its standard output file, it generates a file with extension ".loc" (for "location"), to which it writes the lcoation of all the users ("nodes") once in a second. 
